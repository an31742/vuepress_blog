import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,a}from"./app-BjgZRqXW.js";const i={},l=a('<h3 id="动态资源与静态资源" tabindex="-1"><a class="header-anchor" href="#动态资源与静态资源"><span>动态资源与静态资源</span></a></h3><ul><li>静态资源： 当用户多次访问这个资源，资源的源代码永远不会改变的资源。</li><li>动态资源：当用户多次访问这个资源，资源的源代码可能会发送改变。</li></ul><h3 id="动静分离" tabindex="-1"><a class="header-anchor" href="#动静分离"><span>动静分离</span></a></h3><ul><li>动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作，这就是网站静态化处理的核心思路</li></ul><h3 id="为什么要动静分离" tabindex="-1"><a class="header-anchor" href="#为什么要动静分离"><span>为什么要动静分离</span></a></h3><ul><li>在我们的软件开发中，有些请求是需要后台处理的（如：.jsp,.do等等），有些请求是不需要经过后台处理的（如：css、html、jpg、js等等文件），这些不需要经过后台处理的文件称为静态文件，否则动态文件。因此我们后台处理忽略静态文件。这会有人又说那我后台忽略静态文件不就完了吗。当然这是可以的，但是这样后台的请求次数就明显增多了。在我们对资源的响应速度有要求的时候，我们应该使用这种动静分离的策略去解决。</li><li>动静分离将网站静态资源（HTML，JavaScript，CSS，img等文件）与后台应用分开部署，提高用户访问静态代码的速度，降低对后台应用访问。这里我们将静态资源放到nginx中，动态资源转发到tomcat服务器中。</li><li>因此，动态资源转发到tomcat服务器我们就使用到了前面讲到的反向代理了。</li></ul>',6),n=[l];function r(c,p){return o(),t("div",null,n)}const m=e(i,[["render",r],["__file","deploy.html.vue"]]),h=JSON.parse('{"path":"/frontEndInterview/%E6%A1%86%E6%9E%B6%E6%89%93%E5%8C%85/deploy.html","title":"deploy","lang":"zh-CN","frontmatter":{"title":"deploy","icon":"circle-info","description":"动态资源与静态资源 静态资源： 当用户多次访问这个资源，资源的源代码永远不会改变的资源。 动态资源：当用户多次访问这个资源，资源的源代码可能会发送改变。 动静分离 动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作，这就是网站静态化处理的核心思路 为什么要动...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/frontEndInterview/%E6%A1%86%E6%9E%B6%E6%89%93%E5%8C%85/deploy.html"}],["meta",{"property":"og:site_name","content":"前端知识随笔"}],["meta",{"property":"og:title","content":"deploy"}],["meta",{"property":"og:description","content":"动态资源与静态资源 静态资源： 当用户多次访问这个资源，资源的源代码永远不会改变的资源。 动态资源：当用户多次访问这个资源，资源的源代码可能会发送改变。 动静分离 动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作，这就是网站静态化处理的核心思路 为什么要动..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-23T10:03:41.000Z"}],["meta",{"property":"article:author","content":"小安"}],["meta",{"property":"article:modified_time","content":"2024-06-23T10:03:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"deploy\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-23T10:03:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小安\\",\\"url\\":\\"https://github.com/an31742\\"}]}"]]},"headers":[{"level":3,"title":"动态资源与静态资源","slug":"动态资源与静态资源","link":"#动态资源与静态资源","children":[]},{"level":3,"title":"动静分离","slug":"动静分离","link":"#动静分离","children":[]},{"level":3,"title":"为什么要动静分离","slug":"为什么要动静分离","link":"#为什么要动静分离","children":[]}],"git":{"createdTime":1719137021000,"updatedTime":1719137021000,"contributors":[{"name":"an31742","email":"2234170284@qq.com","commits":1}]},"readingTime":{"minutes":1.48,"words":444},"filePathRelative":"frontEndInterview/框架打包/deploy.md","localizedDate":"2024年6月23日","autoDesc":true}');export{m as comp,h as data};

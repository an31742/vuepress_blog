import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as t}from"./app-1_sQ8TOy.js";const n={},e=t(`<h3 id="webpack-热更新-hmr-核心原理详解" tabindex="-1"><a class="header-anchor" href="#webpack-热更新-hmr-核心原理详解"><span>Webpack 热更新（HMR）核心原理详解</span></a></h3><h4 id="一、核心架构组成" tabindex="-1"><a class="header-anchor" href="#一、核心架构组成"><span>一、核心架构组成</span></a></h4><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">A[浏览器] &lt;--&gt; B[HMR Runtime]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">B &lt;--&gt; C[Webpack Dev Server]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">C &lt;--&gt; D[Webpack Compiler]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">D &lt;--&gt; E[文件系统]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p><strong>Webpack Dev Server (WDS)</strong></p><ul><li>提供 HTTP 服务（静态资源）</li><li>创建 WebSocket 长连接（实时通信）</li><li>集成 HMR 管理功能</li></ul></li><li><p><strong>HMR Runtime (客户端)</strong></p><ul><li>注入到打包后的 <code>bundle.js</code></li><li>监听 WebSocket 消息</li><li>执行模块热替换逻辑</li></ul></li><li><p><strong>Webpack Compiler</strong></p><ul><li>监听文件变动</li><li>编译变更模块</li><li>生成补丁文件（manifest + updated chunks）</li></ul></li></ol><hr><h3 id="二、完整工作流程" tabindex="-1"><a class="header-anchor" href="#二、完整工作流程"><span>二、完整工作流程</span></a></h3><h4 id="阶段1-初始化连接" tabindex="-1"><a class="header-anchor" href="#阶段1-初始化连接"><span>阶段1：初始化连接</span></a></h4><ol><li>浏览器加载页面 → 请求 <code>bundle.js</code>（包含 HMR Runtime）</li><li>HMR Runtime 建立 WebSocket 连接（<code>ws://localhost:8080</code>）</li><li>WDS 推送 <code>{ type: &#39;hash&#39;, data: &#39;xxx&#39; }</code>（当前编译版本号）</li></ol><h4 id="阶段2-文件修改触发" tabindex="-1"><a class="header-anchor" href="#阶段2-文件修改触发"><span>阶段2：文件修改触发</span></a></h4><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">文件系统-&gt;&gt;Webpack Compiler： 文件修改</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Compiler-&gt;&gt;WDS： 编译完成（推送新hash）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">WDS-&gt;&gt;浏览器： WebSocket发送{ type: &#39;hash&#39;, data: &#39;yyy&#39; }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">WDS-&gt;&gt;浏览器： WebSocket发送{ type: &#39;ok&#39; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="阶段3-客户端获取更新" tabindex="-1"><a class="header-anchor" href="#阶段3-客户端获取更新"><span>阶段3：客户端获取更新</span></a></h4><ol><li>HMR Runtime 收到 <code>ok</code> 消息</li><li>发起 JSONP 请求获取 <strong>manifest 文件</strong>：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">http://localhost:8080/yyy.hot-update.json</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回：{ &quot;h&quot;: &quot;yyy&quot;, &quot;c&quot;: { &quot;main&quot;: true } }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>下载变更的 <strong>chunk 文件</strong>：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">http://localhost:8080/main.yyy.hot-update.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h4 id="阶段4-模块热替换" tabindex="-1"><a class="header-anchor" href="#阶段4-模块热替换"><span>阶段4：模块热替换</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// HMR Runtime 核心处理逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">window</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">webpackHotUpdate</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">chunkId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">moreModules</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // 1. 更新模块缓存</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> moduleId</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> moreModules</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> newModule</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> moreModules</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">moduleId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // 替换 __webpack_module_cache__[moduleId]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // 2. 执行模块的accept回调</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> outdatedModules</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">moduleId</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> __webpack_require__</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">hmrC</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">moduleId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // 3. 若未处理更新则刷新页面</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">window</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">location</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="三、关键技术实现" tabindex="-1"><a class="header-anchor" href="#三、关键技术实现"><span>三、关键技术实现</span></a></h3><h4 id="_1-模块热替换边界" tabindex="-1"><a class="header-anchor" href="#_1-模块热替换边界"><span>1. <strong>模块热替换边界</strong></span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 业务代码声明热更新接收点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">hot</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">  module</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">hot</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">accept</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;./math.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // 模块更新后执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;math模块已热更新&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // 重新渲染相关组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>作用域限制</strong>：仅更新 <code>./math.js</code> 及其依赖树</li><li><strong>状态保留</strong>：避免父模块重新执行导致状态丢失</li></ul><h4 id="_2-变更内容传递机制" tabindex="-1"><a class="header-anchor" href="#_2-变更内容传递机制"><span>2. <strong>变更内容传递机制</strong></span></a></h4><table><thead><tr><th>文件类型</th><th>内容说明</th><th>示例</th></tr></thead><tbody><tr><td><code>[hash].hot-update.json</code></td><td>变更模块清单（manifest）</td><td><code>{ &quot;c&quot;: { &quot;main&quot;: true } }</code></td></tr><tr><td><code>[name].[hash].hot-update.js</code></td><td>新模块代码（JSONP格式）</td><td><code>webpackHotUpdate(&quot;main&quot;, { ... })</code></td></tr></tbody></table><h4 id="_3-状态保留策略" tabindex="-1"><a class="header-anchor" href="#_3-状态保留策略"><span>3. <strong>状态保留策略</strong></span></a></h4><ul><li><strong>React/Vue 组件</strong>：框架 HMR 插件自动重渲染（保留组件状态）</li><li><strong>普通 JS 模块</strong>：需手动实现状态恢复<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">hot</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dispose</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 保存状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">hot</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> module</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">hot</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 恢复状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="四、性能优化设计" tabindex="-1"><a class="header-anchor" href="#四、性能优化设计"><span>四、性能优化设计</span></a></h3><ol><li><p><strong>增量编译</strong></p><ul><li>仅编译变更文件及其依赖</li><li>编译速度比全量快 3-5 倍</li></ul></li><li><p><strong>变更范围控制</strong></p><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">graph TB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">A[修改文件] --&gt; B{查找影响范围}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">B --&gt;|影响模块| C[生成更新包]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">B --&gt;|不影响入口| D[跳过页面刷新]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>缓存复用</strong></p><ul><li>未变更模块直接从内存读取</li><li>避免重复解析 AST</li></ul></li></ol><hr><h3 id="五、与传统刷新的对比" tabindex="-1"><a class="header-anchor" href="#五、与传统刷新的对比"><span>五、与传统刷新的对比</span></a></h3><table><thead><tr><th>特性</th><th>热更新（HMR）</th><th>整页刷新（Live Reload）</th></tr></thead><tbody><tr><td><strong>更新速度</strong></td><td>200-500ms</td><td>1-3s</td></tr><tr><td><strong>状态保留</strong></td><td>组件状态/表单数据保留</td><td>完全丢失</td></tr><tr><td><strong>网络请求</strong></td><td>仅下载变更模块（&lt;10KB）</td><td>重新加载所有资源（&gt;1MB）</td></tr><tr><td><strong>视觉体验</strong></td><td>无闪烁/无抖动</td><td>页面闪烁</td></tr><tr><td><strong>调试效率</strong></td><td>保持调试器上下文</td><td>断点/Console 状态丢失</td></tr></tbody></table><hr><h3 id="六、工程实践要点" tabindex="-1"><a class="header-anchor" href="#六、工程实践要点"><span>六、工程实践要点</span></a></h3><h4 id="_1-配置启用-hmr" tabindex="-1"><a class="header-anchor" href="#_1-配置启用-hmr"><span>1. 配置启用 HMR</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  devServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    hot</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 启用HMR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    liveReload</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> // 禁用整页刷新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> webpack</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HotModuleReplacementPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-框架集成方案" tabindex="-1"><a class="header-anchor" href="#_2-框架集成方案"><span>2. 框架集成方案</span></a></h4><table><thead><tr><th>框架</th><th>HMR 适配器</th><th>状态保留能力</th></tr></thead><tbody><tr><td>React</td><td>react-refresh-webpack-plugin</td><td>组件状态/钩子状态</td></tr><tr><td>Vue</td><td>vue-loader</td><td>组件状态/响应式数据</td></tr><tr><td>Svelte</td><td>svelte-loader</td><td>组件状态</td></tr></tbody></table><h4 id="_3-常见问题排查" tabindex="-1"><a class="header-anchor" href="#_3-常见问题排查"><span>3. 常见问题排查</span></a></h4><ul><li><p><strong>HMR 失效</strong>：</p><ol><li>检查 <code>module.hot</code> 是否注入</li><li>确认 WebSocket 连接正常</li><li>查看浏览器控制台警告</li></ol></li><li><p><strong>状态丢失</strong>：</p><ol><li>确认模块包含 <code>module.hot.accept</code></li><li>避免顶层重新初始化变量</li><li>使用框架官方 HMR 插件</li></ol></li></ul><blockquote><p><strong>核心价值</strong>：<br> HMR 通过 <strong>模块级精准更新 + 状态保留机制</strong>，将开发效率提升 40% 以上，<br> 是现代化前端工程的核心基础设施。其本质是 <strong>编译器、运行时、开发服务器三方协作</strong>的结果。</p></blockquote>`,38),l=[e];function h(k,d){return a(),s("div",null,l)}const c=i(n,[["render",h],["__file","webpack热更新原理.html.vue"]]),g=JSON.parse('{"path":"/interview/webpack%E7%83%AD%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86.html","title":"Webpack 热更新（HMR）核心原理详解","lang":"zh-CN","frontmatter":{"title":"Webpack 热更新（HMR）核心原理详解","icon":"object-group","tag":["面试必考"],"description":"Webpack 热更新（HMR）核心原理详解 一、核心架构组成 Webpack Dev Server (WDS) 提供 HTTP 服务（静态资源） 创建 WebSocket 长连接（实时通信） 集成 HMR 管理功能 HMR Runtime (客户端) 注入到打包后的 bundle.js 监听 WebSocket 消息 执行模块热替换逻辑 Webpac...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/webpack%E7%83%AD%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"前端知识随笔"}],["meta",{"property":"og:title","content":"Webpack 热更新（HMR）核心原理详解"}],["meta",{"property":"og:description","content":"Webpack 热更新（HMR）核心原理详解 一、核心架构组成 Webpack Dev Server (WDS) 提供 HTTP 服务（静态资源） 创建 WebSocket 长连接（实时通信） 集成 HMR 管理功能 HMR Runtime (客户端) 注入到打包后的 bundle.js 监听 WebSocket 消息 执行模块热替换逻辑 Webpac..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-06T17:24:01.000Z"}],["meta",{"property":"article:author","content":"小安"}],["meta",{"property":"article:tag","content":"面试必考"}],["meta",{"property":"article:modified_time","content":"2025-08-06T17:24:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Webpack 热更新（HMR）核心原理详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-06T17:24:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小安\\",\\"url\\":\\"https://github.com/an31742\\"}]}"]]},"headers":[{"level":3,"title":"Webpack 热更新（HMR）核心原理详解","slug":"webpack-热更新-hmr-核心原理详解","link":"#webpack-热更新-hmr-核心原理详解","children":[]},{"level":3,"title":"二、完整工作流程","slug":"二、完整工作流程","link":"#二、完整工作流程","children":[]},{"level":3,"title":"三、关键技术实现","slug":"三、关键技术实现","link":"#三、关键技术实现","children":[]},{"level":3,"title":"四、性能优化设计","slug":"四、性能优化设计","link":"#四、性能优化设计","children":[]},{"level":3,"title":"五、与传统刷新的对比","slug":"五、与传统刷新的对比","link":"#五、与传统刷新的对比","children":[]},{"level":3,"title":"六、工程实践要点","slug":"六、工程实践要点","link":"#六、工程实践要点","children":[]}],"git":{"createdTime":1754501041000,"updatedTime":1754501041000,"contributors":[{"name":"an31742","email":"2234170284@qq.com","commits":1}]},"readingTime":{"minutes":3.41,"words":1022},"filePathRelative":"interview/webpack热更新原理.md","localizedDate":"2025年8月6日","autoDesc":true}');export{c as comp,g as data};

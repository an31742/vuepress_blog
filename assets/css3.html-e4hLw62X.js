import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,a as i}from"./app-1_sQ8TOy.js";const e={},l=i(`<h3 id="css盒模型" tabindex="-1"><a class="header-anchor" href="#css盒模型"><span>CSS盒模型</span></a></h3><h4 id="标准模型-ie模型" tabindex="-1"><a class="header-anchor" href="#标准模型-ie模型"><span>标准模型+IE模型</span></a></h4><ul><li>标准模型：宽高（width，height）=文本宽高   没有padding，border；</li><li>IE模型：宽高（width，height）=文本宽高+padding+border；</li></ul><h4 id="设置盒模型" tabindex="-1"><a class="header-anchor" href="#设置盒模型"><span>设置盒模型</span></a></h4><ul><li>标准模型：box-sizing:content-box; 默认</li><li>IE模型：box-sizing:border-box;</li></ul><h4 id="边距重叠" tabindex="-1"><a class="header-anchor" href="#边距重叠"><span>边距重叠</span></a></h4><ul><li>相邻元素的margin-top和margin-bottom会发生重叠</li><li>空内容的p标签也会发生重叠</li><li>兄弟：上下DOM的20px会重叠</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>  &gt;.box {</span></span>
<span class="line"><span>    width: 100px;</span></span>
<span class="line"><span>    height: 100px;</span></span>
<span class="line"><span>    background-color: #fff;</span></span>
<span class="line"><span>    margin-bottom: 20px;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  &gt;.box_1 {</span></span>
<span class="line"><span>    margin-top: 20px;</span></span>
<span class="line"><span>    width: 100px;</span></span>
<span class="line"><span>    height: 100px;</span></span>
<span class="line"><span>    background-color: #100;</span></span>
<span class="line"><span>  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>父子关系，子DOM的10px超过父DOM出去。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>  &gt;.box_2 {  【父DOM没有高度】</span></span>
<span class="line"><span>    width: 100%;</span></span>
<span class="line"><span>    background-color: #444;</span></span>
<span class="line"><span>    &gt;.son{</span></span>
<span class="line"><span>      width: 200px;</span></span>
<span class="line"><span>      height: 200px;</span></span>
<span class="line"><span>      margin-top: 10px;  【会超出去】</span></span>
<span class="line"><span>      background-color: #fff;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>无论是本身的DOM的margin，还是超出的父DOM的margin。遇见了就会重叠</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>  &gt;.box_1 {</span></span>
<span class="line"><span>    margin-top: 20px;</span></span>
<span class="line"><span>    width: 100px;</span></span>
<span class="line"><span>    height: 100px;</span></span>
<span class="line"><span>    background-color: #100;</span></span>
<span class="line"><span>    margin-bottom: 10px;  【本身的】</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  &gt;.box_2 {</span></span>
<span class="line"><span>    width: 100%;</span></span>
<span class="line"><span>    background-color: #444;</span></span>
<span class="line"><span>    &gt;.son{</span></span>
<span class="line"><span>      width: 200px;</span></span>
<span class="line"><span>      height: 200px;</span></span>
<span class="line"><span>      margin-top: 10px;  【超出去的】</span></span>
<span class="line"><span>      background-color: #fff;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="margin负值得问题" tabindex="-1"><a class="header-anchor" href="#margin负值得问题"><span>margin负值得问题</span></a></h4><ul><li>margin的top和left设置负值元素向上向左移动</li><li>margin-right设置负值右侧元素左移，自身不受影响</li><li>margin-bottom设置负值下侧元素上移，自身不受影响</li></ul><h4 id="bfc-块级格式化上下文-block-fromatting-context" tabindex="-1"><a class="header-anchor" href="#bfc-块级格式化上下文-block-fromatting-context"><span>BFC：块级格式化上下文  Block Fromatting Context</span></a></h4><ul><li>一块独立渲染区域，内部元素的渲染不会影响边界以外的元素</li><li>解决：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>1.BFC区域的边距在垂直方向上不发生重叠</span></span>
<span class="line"><span>2.BFC的区域不会与浮动元素的边距重叠</span></span>
<span class="line"><span>3.BFC在页面上是独立的容器，里面外面的元素不会相互影响</span></span>
<span class="line"><span>4.计算父级BFC元素高度的时候，子元素为浮动元素也会参与计算。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="如何创建bfc" tabindex="-1"><a class="header-anchor" href="#如何创建bfc"><span>如何创建BFC</span></a></h4><ul><li>给发生重叠的DOM，加一个父级DOM，设置BFC</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>float的值不为none</span></span>
<span class="line"><span>position的值不为static或者relative</span></span>
<span class="line"><span>display的值为 table-cell, table-caption, inline-block, flex, 或者 inline-flex中的其中一个</span></span>
<span class="line"><span>overflow的值不为visible</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>推荐使用：overflow：hidden</li></ul><h4 id="bfc使用场景" tabindex="-1"><a class="header-anchor" href="#bfc使用场景"><span>BFC使用场景</span></a></h4><ul><li>清除浮动</li><li>修改上面的情况：涉及到规则的1/3/4</li><li>左右布局：规则2。FBC区域与外面的浮动元素,不会与浮动元素的边距重叠，。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;div class=&quot;box_4&quot;&gt;</span></span>
<span class="line"><span>  &lt;div class=&quot;left&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span>  &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/div&gt;</span></span>
<span class="line"><span>  &gt;.box_4{</span></span>
<span class="line"><span>    width: 100%;</span></span>
<span class="line"><span>    background-color: #777;</span></span>
<span class="line"><span>    &gt;.left{</span></span>
<span class="line"><span>      float: left;</span></span>
<span class="line"><span>      width: 100px;</span></span>
<span class="line"><span>      height: 100px;</span></span>
<span class="line"><span>      background-color: red;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    &gt;.right{</span></span>
<span class="line"><span>      height: 200px;</span></span>
<span class="line"><span>      background-color: #fff;</span></span>
<span class="line"><span>      overflow: hidden;  【FBC区域与外面的浮动元素。不会与浮动元素重叠】</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>父级内部有浮动元素，父级高度就不会撑起来，子DOM的margin也会撑出去，父级DOM想撑起来或不想被超出去，父级设置BFC。见box_5</li></ul><h4 id="理解" tabindex="-1"><a class="header-anchor" href="#理解"><span>理解</span></a></h4><ul><li>如果说任何有上面情况的margin的DOM，怎么创建BFC？给当前DOM新增个父级，父级设置BFC。设置BFC的话，父级就成为块级格式化上下文。然后父级的DOM的高度计算就是把子DOM的margin全部算在内，外面相互之间也不再会发生影响。</li></ul><h4 id="如何理解html语义化" tabindex="-1"><a class="header-anchor" href="#如何理解html语义化"><span>如何理解html语义化</span></a></h4><ul><li>让人更容易读懂  （增加代码可读性）</li><li>让搜索引擎更容易读懂  （增加seo）</li></ul><h4 id="float布局" tabindex="-1"><a class="header-anchor" href="#float布局"><span>float布局</span></a></h4><ul><li>使用float布局</li><li>两侧使用margin负值，以便中间内容横向重叠</li><li>防止中间内容被覆盖，一个用padding一个margin</li></ul><h4 id="absolute和relative依据什么定位" tabindex="-1"><a class="header-anchor" href="#absolute和relative依据什么定位"><span>absolute和relative依据什么定位</span></a></h4><ul><li>relative依据自身定位</li><li>absolute依据最近一层定位元素定位 如果没有任何定位元素依据body定位</li></ul><h4 id="line-height如何继承的" tabindex="-1"><a class="header-anchor" href="#line-height如何继承的"><span>line-height如何继承的</span></a></h4><ul><li>固定值或者比例直接继承，如果是是百分比，先计算再继承 line-height*font-size</li></ul><h4 id="rem是什么" tabindex="-1"><a class="header-anchor" href="#rem是什么"><span>rem是什么</span></a></h4><ul><li>是相对于根元素的长度单位   html的font-size</li></ul><h3 id="css移动" tabindex="-1"><a class="header-anchor" href="#css移动"><span>CSS移动</span></a></h3><ul><li>position: relative; transform: translate(30px, 30px);都是相对自己的位置在移动，有什么区别呢？</li><li>从页面布局的角度看效果是一样的。</li><li>从动画角度来说使用transform时，可以让 GPU 参与运算，动画的 FPS 更高。position时，最小的动画变化的单位是1px，transform参与时，可以做到更小（动画效果更加平滑）position 是为页面布局而生的。transform 是为动画而生的。 功能都一样。</li><li>但是translate不会引起浏览器的重绘和重排，这就相当nice了。这点就很牛逼了。页面不会Repaint（没有重新计算render tree）</li></ul>`,39),p=[l];function t(d,r){return a(),n("div",null,p)}const h=s(e,[["render",t],["__file","css3.html.vue"]]),b=JSON.parse('{"path":"/frontEndInterview/css/css3.html","title":"css3","lang":"zh-CN","frontmatter":{"title":"css3","icon":"circle-info","description":"CSS盒模型 标准模型+IE模型 标准模型：宽高（width，height）=文本宽高 没有padding，border； IE模型：宽高（width，height）=文本宽高+padding+border； 设置盒模型 标准模型：box-sizing:content-box; 默认 IE模型：box-sizing:border-box; 边距重叠 相...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/frontEndInterview/css/css3.html"}],["meta",{"property":"og:site_name","content":"前端知识随笔"}],["meta",{"property":"og:title","content":"css3"}],["meta",{"property":"og:description","content":"CSS盒模型 标准模型+IE模型 标准模型：宽高（width，height）=文本宽高 没有padding，border； IE模型：宽高（width，height）=文本宽高+padding+border； 设置盒模型 标准模型：box-sizing:content-box; 默认 IE模型：box-sizing:border-box; 边距重叠 相..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-23T10:03:41.000Z"}],["meta",{"property":"article:author","content":"小安"}],["meta",{"property":"article:modified_time","content":"2024-06-23T10:03:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"css3\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-23T10:03:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小安\\",\\"url\\":\\"https://github.com/an31742\\"}]}"]]},"headers":[{"level":3,"title":"CSS盒模型","slug":"css盒模型","link":"#css盒模型","children":[]},{"level":3,"title":"CSS移动","slug":"css移动","link":"#css移动","children":[]}],"git":{"createdTime":1719137021000,"updatedTime":1719137021000,"contributors":[{"name":"an31742","email":"2234170284@qq.com","commits":1}]},"readingTime":{"minutes":3.58,"words":1074},"filePathRelative":"frontEndInterview/css/css3.md","localizedDate":"2024年6月23日","autoDesc":true}');export{h as comp,b as data};
